from __future__ import annotations
import busio
import displayio
import microcontroller
"""
board Makerdiary nRF52840 M.2 Developer Kit
https://circuitpython.org/boards/makerdiary_nrf52840_m2_devkit
"""
AIN0: microcontroller.Pin = ...
AIN1: microcontroller.Pin = ...
AIN2: microcontroller.Pin = ...
AIN3: microcontroller.Pin = ...
AIN4: microcontroller.Pin = ...
AIN5: microcontroller.Pin = ...
AIN6: microcontroller.Pin = ...
AIN7: microcontroller.Pin = ...
AREF: microcontroller.Pin = ...
VDIV: microcontroller.Pin = ...
NFC1: microcontroller.Pin = ...
NFC2: microcontroller.Pin = ...
P2: microcontroller.Pin = ...
P3: microcontroller.Pin = ...
P4: microcontroller.Pin = ...
P5: microcontroller.Pin = ...
P6: microcontroller.Pin = ...
P7: microcontroller.Pin = ...
P8: microcontroller.Pin = ...
P9: microcontroller.Pin = ...
P10: microcontroller.Pin = ...
P11: microcontroller.Pin = ...
P12: microcontroller.Pin = ...
P13: microcontroller.Pin = ...
P14: microcontroller.Pin = ...
P15: microcontroller.Pin = ...
P16: microcontroller.Pin = ...
P17: microcontroller.Pin = ...
P18: microcontroller.Pin = ...
P19: microcontroller.Pin = ...
P20: microcontroller.Pin = ...
P21: microcontroller.Pin = ...
P25: microcontroller.Pin = ...
P26: microcontroller.Pin = ...
P27: microcontroller.Pin = ...
P28: microcontroller.Pin = ...
P29: microcontroller.Pin = ...
P30: microcontroller.Pin = ...
P31: microcontroller.Pin = ...
P1_0: microcontroller.Pin = ...
P1_1: microcontroller.Pin = ...
P1_2: microcontroller.Pin = ...
P1_3: microcontroller.Pin = ...
P1_4: microcontroller.Pin = ...
P1_5: microcontroller.Pin = ...
P1_6: microcontroller.Pin = ...
P1_7: microcontroller.Pin = ...
P1_8: microcontroller.Pin = ...
P1_9: microcontroller.Pin = ...
D0: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
D1: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
D2: microcontroller.Pin = ...
D3: microcontroller.Pin = ...
D4: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
D6: microcontroller.Pin = ...
D7: microcontroller.Pin = ...
D8: microcontroller.Pin = ...
D9: microcontroller.Pin = ...
D10: microcontroller.Pin = ...
D11: microcontroller.Pin = ...
D12: microcontroller.Pin = ...
D13: microcontroller.Pin = ...
D14: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
D15: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
A3: microcontroller.Pin = ...
A4: microcontroller.Pin = ...
A5: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
LCD_DC: microcontroller.Pin = ...
LCD_CS: microcontroller.Pin = ...
LCD_BL: microcontroller.Pin = ...
LCD_RST: microcontroller.Pin = ...
LED_R: microcontroller.Pin = ...
LED_G: microcontroller.Pin = ...
LED_B: microcontroller.Pin = ...
BUTTON_USR: microcontroller.Pin = ...
DISPLAY: displayio.Display = ...
def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


