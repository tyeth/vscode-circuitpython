from __future__ import annotations
import busio
import microcontroller
"""
board splitkb.com Liatris
https://circuitpython.org/boards/splitkb_liatris
"""
D0: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
D1: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
D2: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
D3: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
D4: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
D6: microcontroller.Pin = ...
D7: microcontroller.Pin = ...
D8: microcontroller.Pin = ...
D9: microcontroller.Pin = ...
D29: microcontroller.Pin = ...
A3: microcontroller.Pin = ...
D28: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
D27: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
D26: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
D22: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
D20: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
D23: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
D21: microcontroller.Pin = ...
D12: microcontroller.Pin = ...
D13: microcontroller.Pin = ...
D14: microcontroller.Pin = ...
D15: microcontroller.Pin = ...
D16: microcontroller.Pin = ...
NEOPIXEL: microcontroller.Pin = ...
VBUS_SENSE: microcontroller.Pin = ...
POWER_LED: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

