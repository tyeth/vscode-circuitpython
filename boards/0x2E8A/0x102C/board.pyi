from __future__ import annotations
import busio
import microcontroller
"""
board Invector Labs Challenger RP2040 WiFi/BLE
https://circuitpython.org/boards/challenger_rp2040_wifi_ble
"""
SDA: microcontroller.Pin = ...
GP0: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
GP1: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
GP2: microcontroller.Pin = ...
D6: microcontroller.Pin = ...
GP3: microcontroller.Pin = ...
ESP_TX: microcontroller.Pin = ...
GP4: microcontroller.Pin = ...
ESP_RX: microcontroller.Pin = ...
GP5: microcontroller.Pin = ...
D9: microcontroller.Pin = ...
GP6: microcontroller.Pin = ...
D10: microcontroller.Pin = ...
GP7: microcontroller.Pin = ...
D11: microcontroller.Pin = ...
GP8: microcontroller.Pin = ...
D12: microcontroller.Pin = ...
GP9: microcontroller.Pin = ...
D13: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
GP10: microcontroller.Pin = ...
NEOPIXEL: microcontroller.Pin = ...
GP11: microcontroller.Pin = ...
WIFI_MODE: microcontroller.Pin = ...
WIFI_RESET: microcontroller.Pin = ...
D0: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
GP16: microcontroller.Pin = ...
D1: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
GP17: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
GP22: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
GP23: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
GP20: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
GP26: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
GP27: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
GP28: microcontroller.Pin = ...
A3: microcontroller.Pin = ...
GP29: microcontroller.Pin = ...
A4: microcontroller.Pin = ...
GP25: microcontroller.Pin = ...
A5: microcontroller.Pin = ...
GP21: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

