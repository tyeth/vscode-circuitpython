from __future__ import annotations
import busio
import microcontroller
import typing
"""
board Pimoroni Servo 2040
https://circuitpython.org/boards/pimoroni_servo2040
"""
SERVO_1: microcontroller.Pin = ...
SERVO_2: microcontroller.Pin = ...
SERVO_3: microcontroller.Pin = ...
SERVO_4: microcontroller.Pin = ...
SERVO_5: microcontroller.Pin = ...
SERVO_6: microcontroller.Pin = ...
SERVO_7: microcontroller.Pin = ...
SERVO_8: microcontroller.Pin = ...
SERVO_9: microcontroller.Pin = ...
SERVO_10: microcontroller.Pin = ...
SERVO_11: microcontroller.Pin = ...
SERVO_12: microcontroller.Pin = ...
SERVO_13: microcontroller.Pin = ...
SERVO_14: microcontroller.Pin = ...
SERVO_15: microcontroller.Pin = ...
SERVO_16: microcontroller.Pin = ...
SERVO_17: microcontroller.Pin = ...
SERVO_18: microcontroller.Pin = ...
NEOPIXEL: microcontroller.Pin = ...
LED_DATA: microcontroller.Pin = ...
INT: microcontroller.Pin = ...
GP19: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
GP20: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
GP21: microcontroller.Pin = ...
USER_SW: microcontroller.Pin = ...
ADC_ADDR_0: microcontroller.Pin = ...
ADC_ADDR_1: microcontroller.Pin = ...
ADC_ADDR_2: microcontroller.Pin = ...
GP26_A0: microcontroller.Pin = ...
GP26: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
GP27_A1: microcontroller.Pin = ...
GP27: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
GP28_A2: microcontroller.Pin = ...
GP28: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
SHARED_ADC: microcontroller.Pin = ...
STEMMA_I2C: typing.Any = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


