from __future__ import annotations
import busio
import microcontroller
"""
board Nice Keyboards nice!nano
https://circuitpython.org/boards/nice_nano
"""
P0_02: microcontroller.Pin = ...
P0_04: microcontroller.Pin = ...
P0_06: microcontroller.Pin = ...
P0_08: microcontroller.Pin = ...
P0_09: microcontroller.Pin = ...
P0_10: microcontroller.Pin = ...
P0_11: microcontroller.Pin = ...
P0_12: microcontroller.Pin = ...
P0_13: microcontroller.Pin = ...
P0_15: microcontroller.Pin = ...
P0_17: microcontroller.Pin = ...
P0_20: microcontroller.Pin = ...
P0_22: microcontroller.Pin = ...
P0_24: microcontroller.Pin = ...
P0_26: microcontroller.Pin = ...
P0_29: microcontroller.Pin = ...
P0_31: microcontroller.Pin = ...
P1_00: microcontroller.Pin = ...
P1_01: microcontroller.Pin = ...
P1_02: microcontroller.Pin = ...
P1_04: microcontroller.Pin = ...
P1_06: microcontroller.Pin = ...
P1_07: microcontroller.Pin = ...
P1_11: microcontroller.Pin = ...
P1_13: microcontroller.Pin = ...
P1_15: microcontroller.Pin = ...
AIN0: microcontroller.Pin = ...
AIN2: microcontroller.Pin = ...
AIN5: microcontroller.Pin = ...
AIN7: microcontroller.Pin = ...
NFC1: microcontroller.Pin = ...
NFC2: microcontroller.Pin = ...
BAT_VOLT: microcontroller.Pin = ...
VCC_OFF: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

