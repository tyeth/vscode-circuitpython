from __future__ import annotations
import busio
import microcontroller
"""
board Electronut Labs Blip
https://circuitpython.org/boards/electronut_labs_blip
"""
A0: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
A3: microcontroller.Pin = ...
A4: microcontroller.Pin = ...
A5: microcontroller.Pin = ...
NFC1: microcontroller.Pin = ...
NFC2: microcontroller.Pin = ...
D2: microcontroller.Pin = ...
D4: microcontroller.Pin = ...
D6: microcontroller.Pin = ...
D8: microcontroller.Pin = ...
D19: microcontroller.Pin = ...
D21: microcontroller.Pin = ...
D26: microcontroller.Pin = ...
D27: microcontroller.Pin = ...
D29: microcontroller.Pin = ...
D31: microcontroller.Pin = ...
D33: microcontroller.Pin = ...
D36: microcontroller.Pin = ...
D38: microcontroller.Pin = ...
D3: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
D7: microcontroller.Pin = ...
D16: microcontroller.Pin = ...
D20: microcontroller.Pin = ...
D22: microcontroller.Pin = ...
D23: microcontroller.Pin = ...
D28: microcontroller.Pin = ...
D30: microcontroller.Pin = ...
D32: microcontroller.Pin = ...
D35: microcontroller.Pin = ...
D37: microcontroller.Pin = ...
D40: microcontroller.Pin = ...
D11: microcontroller.Pin = ...
D12: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
CS: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
L: microcontroller.Pin = ...
RED_LED: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
BLUE_LED: microcontroller.Pin = ...
GREEN_LED: microcontroller.Pin = ...
BUTTON: microcontroller.Pin = ...
RESET: microcontroller.Pin = ...
def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


