from __future__ import annotations
import busio
import microcontroller
"""
board TG-Techie TG-Watch
https://circuitpython.org/boards/TG-Watch
"""
SCK: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
VBUS_PRESENT: microcontroller.Pin = ...
HAPTIC_ENABLE: microcontroller.Pin = ...
HAPTIC_INT: microcontroller.Pin = ...
CTP_INT: microcontroller.Pin = ...
CTP_RST: microcontroller.Pin = ...
TFT_RST: microcontroller.Pin = ...
TFT_DC: microcontroller.Pin = ...
D21: microcontroller.Pin = ...
TFT_CS: microcontroller.Pin = ...
ACCEL_INT1: microcontroller.Pin = ...
ACCEL_INT2: microcontroller.Pin = ...
BATTERY_DIV: microcontroller.Pin = ...
RTC_INT: microcontroller.Pin = ...
RTC_RST: microcontroller.Pin = ...
CHRG_STAT: microcontroller.Pin = ...
BACKLIGHT: microcontroller.Pin = ...
BAT_INT: microcontroller.Pin = ...
SMC_RST: microcontroller.Pin = ...
_A0: microcontroller.Pin = ...
_A1: microcontroller.Pin = ...
_A2: microcontroller.Pin = ...
_A3: microcontroller.Pin = ...
_A4: microcontroller.Pin = ...
_A5: microcontroller.Pin = ...
AREF: microcontroller.Pin = ...
_VOLTAGE_MONITOR: microcontroller.Pin = ...
_BATTERY: microcontroller.Pin = ...
_SWITCH: microcontroller.Pin = ...
_NFC1: microcontroller.Pin = ...
_NFC2: microcontroller.Pin = ...
_D2: microcontroller.Pin = ...
_D5: microcontroller.Pin = ...
_D6: microcontroller.Pin = ...
_D9: microcontroller.Pin = ...
_D10: microcontroller.Pin = ...
_D11: microcontroller.Pin = ...
_D12: microcontroller.Pin = ...
_D13: microcontroller.Pin = ...
_NEOPIXEL: microcontroller.Pin = ...
def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


