from __future__ import annotations
import busio
import microcontroller
"""
board unexpectedmaker_tinypico
https://circuitpython.org/boards/unexpectedmaker_tinypico
"""
IO4: microcontroller.Pin = ...
D4: microcontroller.Pin = ...
A4: microcontroller.Pin = ...
IO14: microcontroller.Pin = ...
D14: microcontroller.Pin = ...
A14: microcontroller.Pin = ...
IO15: microcontroller.Pin = ...
D15: microcontroller.Pin = ...
A15: microcontroller.Pin = ...
IO27: microcontroller.Pin = ...
D27: microcontroller.Pin = ...
A27: microcontroller.Pin = ...
IO26: microcontroller.Pin = ...
D26: microcontroller.Pin = ...
A26: microcontroller.Pin = ...
DAC2: microcontroller.Pin = ...
IO25: microcontroller.Pin = ...
D25: microcontroller.Pin = ...
A25: microcontroller.Pin = ...
DAC1: microcontroller.Pin = ...
IO23: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
SDO: microcontroller.Pin = ...
D23: microcontroller.Pin = ...
IO19: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
SDI: microcontroller.Pin = ...
D19: microcontroller.Pin = ...
IO18: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
D18: microcontroller.Pin = ...
IO5: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
A5: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
IO22: microcontroller.Pin = ...
D22: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
IO21: microcontroller.Pin = ...
D21: microcontroller.Pin = ...
IO32: microcontroller.Pin = ...
D32: microcontroller.Pin = ...
A32: microcontroller.Pin = ...
IO33: microcontroller.Pin = ...
D33: microcontroller.Pin = ...
A33: microcontroller.Pin = ...
BATTERY: microcontroller.Pin = ...
VBAT: microcontroller.Pin = ...
VBAT_SENSE: microcontroller.Pin = ...
VOLTAGE_MONITOR: microcontroller.Pin = ...
VBUS: microcontroller.Pin = ...
VBUS_SENSE: microcontroller.Pin = ...
APA102_MOSI: microcontroller.Pin = ...
APA102_SCK: microcontroller.Pin = ...
APA102_PWR: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

