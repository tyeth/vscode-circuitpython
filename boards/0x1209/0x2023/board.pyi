from __future__ import annotations
import busio
import displayio
import microcontroller
"""
board Lilygo T-Display
https://circuitpython.org/boards/lilygo_t_display_rp2040
"""
TX: microcontroller.Pin = ...
GP1: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
GP2: microcontroller.Pin = ...
BUTTON_L: microcontroller.Pin = ...
GP6: microcontroller.Pin = ...
BUTTON_R: microcontroller.Pin = ...
GP7: microcontroller.Pin = ...
GP8: microcontroller.Pin = ...
GP9: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
GP10: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
GP11: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
GP12: microcontroller.Pin = ...
GP13: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
GP14: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
GP15: microcontroller.Pin = ...
GP16: microcontroller.Pin = ...
GP18: microcontroller.Pin = ...
GP21: microcontroller.Pin = ...
TFT_POWER: microcontroller.Pin = ...
GP22: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
GP25: microcontroller.Pin = ...
LCD_MOSI: microcontroller.Pin = ...
LCD_CLK: microcontroller.Pin = ...
LCD_CS: microcontroller.Pin = ...
LCD_RESET: microcontroller.Pin = ...
LCD_BACKLIGHT: microcontroller.Pin = ...
LCD_DC: microcontroller.Pin = ...
DISPLAY: displayio.Display = ...
VOLTAGE_MONITOR: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


