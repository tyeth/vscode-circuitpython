from __future__ import annotations
import busio
import microcontroller
"""
board maholli SAM32
https://circuitpython.org/boards/sam32
"""
IO39: microcontroller.Pin = ...
IO36: microcontroller.Pin = ...
A6: microcontroller.Pin = ...
A7: microcontroller.Pin = ...
A8: microcontroller.Pin = ...
A9: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
xSDCS: microcontroller.Pin = ...
DAC0: microcontroller.Pin = ...
DAC1: microcontroller.Pin = ...
D16: microcontroller.Pin = ...
D19: microcontroller.Pin = ...
D20: microcontroller.Pin = ...
D31: microcontroller.Pin = ...
D35: microcontroller.Pin = ...
D36: microcontroller.Pin = ...
D37: microcontroller.Pin = ...
D38: microcontroller.Pin = ...
D41: microcontroller.Pin = ...
D42: microcontroller.Pin = ...
D43: microcontroller.Pin = ...
D44: microcontroller.Pin = ...
D49: microcontroller.Pin = ...
D50: microcontroller.Pin = ...
D59: microcontroller.Pin = ...
D60: microcontroller.Pin = ...
D61: microcontroller.Pin = ...
IO13: microcontroller.Pin = ...
IO12: microcontroller.Pin = ...
IO14: microcontroller.Pin = ...
TCK: microcontroller.Pin = ...
TDI: microcontroller.Pin = ...
TMS: microcontroller.Pin = ...
ESP_CS: microcontroller.Pin = ...
TX1: microcontroller.Pin = ...
RX1: microcontroller.Pin = ...
TX2: microcontroller.Pin = ...
RX2: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
RTS: microcontroller.Pin = ...
DTR: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
NEOPIXEL: microcontroller.Pin = ...
BATTERY: microcontroller.Pin = ...
def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


