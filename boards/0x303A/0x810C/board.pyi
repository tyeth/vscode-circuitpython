from __future__ import annotations
import busio
import displayio
import microcontroller
"""
board Waveshare Electronics ESP32-S2-Pico-LCD
https://circuitpython.org/boards/waveshare_esp32_s2_pico_lcd
"""
BUTTON: microcontroller.Pin = ...
BOOT0: microcontroller.Pin = ...
GP0: microcontroller.Pin = ...
A3: microcontroller.Pin = ...
USB_IN: microcontroller.Pin = ...
GP2: microcontroller.Pin = ...
GP3: microcontroller.Pin = ...
GP4: microcontroller.Pin = ...
GP5: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
GP6: microcontroller.Pin = ...
A1: microcontroller.Pin = ...
GP7: microcontroller.Pin = ...
A2: microcontroller.Pin = ...
GP8: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
GP10: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
GP11: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
GP12: microcontroller.Pin = ...
CS: microcontroller.Pin = ...
GP13: microcontroller.Pin = ...
GP14: microcontroller.Pin = ...
GP15: microcontroller.Pin = ...
GP16: microcontroller.Pin = ...
GP17: microcontroller.Pin = ...
GP34: microcontroller.Pin = ...
GP35: microcontroller.Pin = ...
GP36: microcontroller.Pin = ...
GP37: microcontroller.Pin = ...
GP38: microcontroller.Pin = ...
GP39: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
GP40: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
GP41: microcontroller.Pin = ...
GP42: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
GP43: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
GP44: microcontroller.Pin = ...
LCD_MOSI: microcontroller.Pin = ...
LCD_CLK: microcontroller.Pin = ...
LCD_CS: microcontroller.Pin = ...
LCD_RST: microcontroller.Pin = ...
LCD_BACKLIGHT: microcontroller.Pin = ...
LCD_DC: microcontroller.Pin = ...
DISPLAY: displayio.Display = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

