from __future__ import annotations
import busio
import microcontroller
"""
board Lolin S2 Mini
https://circuitpython.org/boards/lolin_s2_mini
"""
BUTTON: microcontroller.Pin = ...
IO0: microcontroller.Pin = ...
IO1: microcontroller.Pin = ...
IO2: microcontroller.Pin = ...
IO3: microcontroller.Pin = ...
A0: microcontroller.Pin = ...
IO4: microcontroller.Pin = ...
IO5: microcontroller.Pin = ...
D0: microcontroller.Pin = ...
IO6: microcontroller.Pin = ...
IO7: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
D5: microcontroller.Pin = ...
IO8: microcontroller.Pin = ...
IO9: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
D6: microcontroller.Pin = ...
IO10: microcontroller.Pin = ...
IO11: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
D7: microcontroller.Pin = ...
IO12: microcontroller.Pin = ...
IO13: microcontroller.Pin = ...
D8: microcontroller.Pin = ...
IO14: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
IO15: microcontroller.Pin = ...
IO16: microcontroller.Pin = ...
D4: microcontroller.Pin = ...
IO17: microcontroller.Pin = ...
IO18: microcontroller.Pin = ...
D3: microcontroller.Pin = ...
IO21: microcontroller.Pin = ...
IO33: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
D2: microcontroller.Pin = ...
IO34: microcontroller.Pin = ...
IO35: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
D1: microcontroller.Pin = ...
IO36: microcontroller.Pin = ...
IO37: microcontroller.Pin = ...
IO38: microcontroller.Pin = ...
IO39: microcontroller.Pin = ...
IO40: microcontroller.Pin = ...
IO41: microcontroller.Pin = ...
IO42: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
IO43: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
IO44: microcontroller.Pin = ...
IO45: microcontroller.Pin = ...
IO46: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


