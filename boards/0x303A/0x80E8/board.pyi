from __future__ import annotations
import busio
import displayio
import microcontroller
import typing
"""
board HiiBot HiiBot IoTs2
https://circuitpython.org/boards/hiibot_iots2
"""
IO0: microcontroller.Pin = ...
IO1: microcontroller.Pin = ...
SCL: microcontroller.Pin = ...
IO2: microcontroller.Pin = ...
SDA: microcontroller.Pin = ...
IO3: microcontroller.Pin = ...
IO4: microcontroller.Pin = ...
IO5: microcontroller.Pin = ...
IO6: microcontroller.Pin = ...
IO7: microcontroller.Pin = ...
IO8: microcontroller.Pin = ...
IO9: microcontroller.Pin = ...
IO10: microcontroller.Pin = ...
IO11: microcontroller.Pin = ...
IO12: microcontroller.Pin = ...
IO16: microcontroller.Pin = ...
NEOPIXEL: microcontroller.Pin = ...
IO17: microcontroller.Pin = ...
DAC1: microcontroller.Pin = ...
IO18: microcontroller.Pin = ...
DAC2: microcontroller.Pin = ...
IO21: microcontroller.Pin = ...
BUTTON: microcontroller.Pin = ...
IO33: microcontroller.Pin = ...
TFT_MOSI: microcontroller.Pin = ...
IO34: microcontroller.Pin = ...
TFT_SCK: microcontroller.Pin = ...
IO35: microcontroller.Pin = ...
TFT_DC: microcontroller.Pin = ...
IO36: microcontroller.Pin = ...
TFT_NSS: microcontroller.Pin = ...
IO37: microcontroller.Pin = ...
BLUELED: microcontroller.Pin = ...
IO38: microcontroller.Pin = ...
TFT_BL: microcontroller.Pin = ...
DISPLAY: displayio.Display = ...
IO40: microcontroller.Pin = ...
SCK: microcontroller.Pin = ...
IO41: microcontroller.Pin = ...
MISO: microcontroller.Pin = ...
IO42: microcontroller.Pin = ...
MOSI: microcontroller.Pin = ...
IO43: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
IO44: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
STEMMA_I2C: typing.Any = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

