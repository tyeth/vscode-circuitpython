from __future__ import annotations
import busio
import microcontroller
"""
board ai_thinker_esp32-c3s
https://circuitpython.org/boards/ai_thinker_esp32-c3s
"""
IO0: microcontroller.Pin = ...
IO1: microcontroller.Pin = ...
IO2: microcontroller.Pin = ...
IO3: microcontroller.Pin = ...
IO4: microcontroller.Pin = ...
IO5: microcontroller.Pin = ...
IO6: microcontroller.Pin = ...
IO7: microcontroller.Pin = ...
IO8: microcontroller.Pin = ...
IO9: microcontroller.Pin = ...
IO10: microcontroller.Pin = ...
IO11: microcontroller.Pin = ...
IO12: microcontroller.Pin = ...
IO13: microcontroller.Pin = ...
IO14: microcontroller.Pin = ...
IO15: microcontroller.Pin = ...
IO16: microcontroller.Pin = ...
IO17: microcontroller.Pin = ...
IO18: microcontroller.Pin = ...
IO19: microcontroller.Pin = ...
IO20: microcontroller.Pin = ...
IO21: microcontroller.Pin = ...
RX: microcontroller.Pin = ...
TX: microcontroller.Pin = ...
ADC: microcontroller.Pin = ...
LED: microcontroller.Pin = ...
LED_YELLOW: microcontroller.Pin = ...
LED_WHITE: microcontroller.Pin = ...
LED_RED: microcontroller.Pin = ...
LED_GREEN: microcontroller.Pin = ...
LED_BLUE: microcontroller.Pin = ...
BUTTON: microcontroller.Pin = ...
def I2C() -> busio.I2C:
    """Returns the `busio.I2C` object for the board's designated I2C bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.I2C`.
    """
    ...


def SPI() -> busio.SPI:
    """Returns the `busio.SPI` object for the board's designated SPI bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.SPI`.
    """
    ...


def UART() -> busio.UART:
    """Returns the `busio.UART` object for the board's designated UART bus(es).
    The object created is a singleton, and uses the default parameter values for `busio.UART`.
    """
    ...

